# PRODUCTION
version: '3.1'

services:
  reverseproxy:
    build:
      context: ./nginx
      dockerfile: Dockerfile.prod
    depends_on:
      - nodeapi
    container_name: reverseproxy
    hostname: reverseproxy
    networks:
      - network-nodejs
    ports:
      - 3000:80 # HOST:CLIENT
  
  nodeapi:
    build:
      context: ../
      dockerfile: Dockerfiles/node-api/Dockerfile.prod
    depends_on:
      - postgres
      - redis
    container_name: nodeapi
    hostname: nodeapi
    environment:
      - NODE_ENV=production
      - DB_USER=admin
      - DB_PASSWORD=azertyuiop01
      - DB_NAME=test
      - DB_HOST=devops_tp_postgres
    networks:
      - network-db
      - network-nodejs

  postgres:
    image: postgres:alpine
    depends_on:
      - redis
    container_name: postgres
    hostname: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: azertyuiop01
      POSTGRES_DB: test
      PGDATA: /data/postgres
    networks:
      - network-db

  redis:
    image: redis:alpine3.11
    container_name: redis
    networks:
      - network-db

networks:
  network-db:
  network-nodejs: